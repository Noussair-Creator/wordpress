import mysql.connector

# Configuration MySQL
config = {
    'host': 'localhost',
    'user': 'phpmyadmin',
    'password': 'admin',
    'database': 'utmsearch_w',
    'charset': 'utf8mb4'
}

try:
    conn = mysql.connector.connect(**config)
    cursor = conn.cursor()

    # √âtape 1 : Ins√©rer un nouvel appel dans appels_candidature
    titre_appel = "Master FDST"

    cursor.execute("""
        INSERT INTO utm_master_appels_candidature (titre)
        VALUES (%s)
    """, (titre_appel,))
    appel_id = cursor.lastrowid
    print(f"‚úÖ Appel 'Master FDST' ins√©r√© avec ID {appel_id}")

    # √âtape 2 : Cr√©er une entr√©e dans appels_sessions avec ce m√™me ID
    date_debut = '2025-07-01'
    date_fin = '2025-08-31'

    cursor.execute("""
        INSERT INTO utm_master_appels_sessions (appel_id, nom_session, date_debut, date_fin)
        VALUES (%s, %s, %s, %s)
    """, (appel_id, titre_appel, date_debut, date_fin))

    print("‚úÖ Appel ins√©r√© dans utm_master_appels_sessions.")

    # √âtape 3 : R√©cup√©rer les masters de l‚Äôinstitut FDST (id=8)
    cursor.execute("SELECT id FROM utm_master_fichemaster WHERE institut_id = 8")
    master_ids = [row[0] for row in cursor.fetchall()]
    print(f"‚úÖ {len(master_ids)} masters trouv√©s pour institut 8.")

    # √âtape 4 : Lier les masters √† l‚Äôappel
    for master_id in master_ids:
        cursor.execute("""
            INSERT IGNORE INTO utm_master_appels_masters (appel_id, master_id)
            VALUES (%s, %s)
        """, (appel_id, master_id))
    print("‚úÖ Masters li√©s √† l‚Äôappel.")

    # √âtape 5 : Cr√©er une session "publi√© web" pour chaque master
    for master_id in master_ids:
        cursor.execute("""
            INSERT IGNORE INTO utm_master_sessions (master_id, intitule_session, etat)
            VALUES (%s, %s, %s)
        """, (master_id, '2025-2026', 'publi√© web'))
    print("‚úÖ Sessions cr√©√©es pour les masters.")

    conn.commit()
    print("‚úÖ Toutes les op√©rations ont √©t√© enregistr√©es avec succ√®s.")

except mysql.connector.Error as err:
    print(f"‚ùå Erreur MySQL : {err}")

finally:
    if conn.is_connected():
        cursor.close()
        conn.close()
        print("üîí Connexion ferm√©e.")
